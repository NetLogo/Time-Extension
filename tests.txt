TimeCreateDefault
  extensions [time]
  time:show (time:create "2000/01/01 10:00") "yyyy/dd/MM HH:mm" => "2000/01/01 10:00"
  time:show (time:create "2000/01/01 10:00") "yyyy/dd/MM" => "2000/01/01"
  time:show (time:create "2000/01/01 10:00") "dd/MM/yyyy" => "01/01/2000"

TimePlusOperator
  extensions [time]
  time:show (time:plus (time:create "2000/01/01 10:00") 3 "days") "yyyy/MM/dd" => "2000/01/04"
  time:show (time:plus (time:create "2000/01/04 10:00") -3 "days") "yyyy/MM/dd" => "2000/01/01"
  time:show (time:plus (time:create "2000/01/04 10:00") 0 "days") "yyyy/MM/dd" => "2000/01/04"
  time:show (time:plus (time:create "2000/01/04 10:00") 3 "hour") "yyyy/MM/dd HH" => "2000/01/04 13"
  time:show (time:plus (time:create "2000/01/04 10:00") 24 "hour") "yyyy/MM/dd HH" => "2000/01/05 10"

TimeIsBefore
  extensions [time]
  time:is-before (time:create "2000/01/01 10:00")  (time:create "2000/01/01 11:00") => true
  time:is-before (time:create "2000/01/01 10:00")  (time:create "2000/01/01 09:00") => false
  time:is-before (time:create "2000/01/01 10:00")  (time:create "2000/01/01 10:00") => false
  time:is-before (time:create "2001/01/01 10:00")  (time:create "2001/01/01 10:00") => false
  time:is-before (time:create "2001/01/01 10:00")  (time:create "2000/01/01 10:00") => false
  time:is-before (time:create "2000/01/01 10:00")  (time:create "2001/01/01 10:00") => true
  time:is-before (time:create "2001/01/01 10:00")  (time:create "2000/01/01 10:00") => false
  time:is-before (time:create "2000/01/01 10:01")  (time:create "2000/01/01 10:00") => false
  time:is-before (time:create "2000/01/01 10:00")  (time:create "2000/01/01 10:01") => true

TimeIsAfter
  extensions [time]
  time:is-after (time:create "2000/01/01 10:00")  (time:create "2000/01/01 11:00") => false
  time:is-after (time:create "2000/01/01 10:00")  (time:create "2000/01/01 09:00") => true
  time:is-after (time:create "2000/01/01 10:00")  (time:create "2000/01/01 10:00") => false
  time:is-after (time:create "2001/01/01 10:00")  (time:create "2001/01/01 10:00") => false
  time:is-after (time:create "2001/01/01 10:00")  (time:create "2000/01/01 10:00") => true
  time:is-after (time:create "2000/01/01 10:00")  (time:create "2001/01/01 10:00") => false
  time:is-after (time:create "2001/01/01 10:00")  (time:create "2000/01/01 10:00") => true
  time:is-after (time:create "2000/01/01 10:01")  (time:create "2000/01/01 10:00") => true
  time:is-after (time:create "2000/01/01 10:00")  (time:create "2000/01/01 10:01") => false

TimeIsEqual
  extensions [time]
  time:is-equal (time:create "2000/01/01 10:00")  (time:create "2000/01/01 11:00") => false
  time:is-equal (time:create "2000/01/01 10:00")  (time:create "2000/01/01 09:00") => false
  time:is-equal (time:create "2000/01/01 10:00")  (time:create "2000/01/01 10:00") => true
  time:is-equal (time:create "2001/01/01 10:00")  (time:create "2001/01/01 10:00") => true
  time:is-equal (time:create "2001/01/01 10:00")  (time:create "2000/01/01 10:00") => false
  time:is-equal (time:create "2000/01/01 10:00")  (time:create "2001/01/01 10:00") => false
  time:is-equal (time:create "2001/01/01 10:00")  (time:create "2000/01/01 10:00") => false
  time:is-equal (time:plus (time:create "2001/01/01 10:00") 3 "day") (time:create "2001/01/04 10:00") => true
    time:is-equal (time:plus (time:create "2001/01/04 10:00") -3 "day") (time:create "2001/01/01 10:00") => true

TimeShow
  extensions [time]
  time:show (time:create "2000/01/01 10:00") "yyyy/MM/d" => "2000/01/1"
  time:show (time:create "2000/01/01 10:00") "yyyy-MM-d" => "2000-01-1"
  time:show (time:create "2000/01/01 10:00") "mm" => "00"
  time:show (time:create "2000/01/01 10:00:01.001") "SSSS" => "0010"

TimeIsBetween
  extensions [time]
  time:is-between (time:create "2000/01/01 10:00:01") (time:create "2000/01/01 10:00:01") (time:create "2000/01/01 10:00:01") => true
  time:is-between (time:create "2000/01/01") (time:create "2000/01/01") (time:create "2000/01/01") => true
  time:is-between (time:create "2000/01/02") (time:create "2000/01/05") (time:create "2000/01/01") => true
  time:is-between (time:create "2000/01/01") (time:create "2000/01/02") (time:create "2000/01/03") => false

TimeGet
  extensions [time]
  time:get "year" (time:create "2000/01/01 10:00") => 2000
  time:get "year" (time:plus (time:create "2000/01/01 10:00") 3 "day") => 2000
  time:get "year" (time:plus (time:create "2000/01/01 10:00") 3 "year") => 2003
  time:get "month" (time:create "2000/01/01 10:00") => 1
  time:get "day" (time:create "2000/01/01 10:00") => 1
  time:get "hour" (time:create "2000/01/01 10:00") => 10
  time:get "second" (time:create "2000/01/01 10:00:01.100") => 1
  time:get "milli" (time:create "2000/01/01 10:00:01.123") => 0

TimeAnchorToTick
  extensions [time]
  time:show (time:anchor-to-ticks (time:create "2000-01-02 03:04:05") 1 "hour") "yyyy|MM/dd" => "2000|01/02"

TimeDifferenceBetween
  extensions [time]
  time:difference-between (time:create "2000-01-02 10:00") (time:create "2000-01-01 10:00") "day" => -1
  time:difference-between (time:create "2000-01-02 10:00") (time:create "2000-01-02 10:02") "second" => 120
  time:difference-between (time:create "2000-02-01 10:00") (time:create "2000-03-01 10:00") "day" => 29

TimeCreateWithFormat
  extensions [time]
  time:show (time:create-with-format "2000-02-01" "yyyy-MM-dd") "yyyy-MM-dd" => "2000-02-01"
  time:show (time:create-with-format "2000-02-01" "yyyy-MM-dd") "dd/MM/yyyy" => "01/02/2000"
  time:show (time:create-with-format "2000-02-01 10:00:42" "yyyy-MM-dd HH:mm:ss") "dd/MM/ss" => "01/02/42"
   time:show (time:create-with-format "2000-02-01 10:23:42" "yyyy-MM-dd HH:ss:mm") "dd/MM/ss" => "01/02/23"

TimeCreateCopy
  extensions [time]
  time:show time:copy (time:create "2000/01/01 10:00") "yyyy/MM/dd" => "2000/01/01"
  time:show time:copy (time:plus (time:create "2000/01/01 10:00") 3 "day") "yyyy/MM/dd" => "2000/01/04"
  time:show time:copy (time:plus (time:create "2000/01/01 10:00") 0 "day") "yyyy/MM/dd" => "2000/01/01"

TimeDiscreteEventAddEventTick
  extensions [time]
  globals [dt value]
  turtles-own [cheese]
  O> crt 1 [ set cheese 3 ]
  O> reset-ticks
  [ cheese ] of one-of turtles => 3
  O> set dt time:anchor-to-ticks (time:create "2000/01/01 10:00") 1 "day"
  O> time:anchor-schedule dt 1 "day"
  O> time:schedule-event "observer" ([[] -> ask one-of turtles [set cheese 0]]) 2.0
  O> tick time:go
  O> tick time:go
  [ cheese ] of one-of turtles => 0

TimeDiscreteEventAddEventDate
  extensions [time]
  globals [dt value]
  turtles-own [cheese]
  O> crt 1 [ set cheese 3 ]
  O> reset-ticks
  [ cheese ] of one-of turtles => 3
  O> set dt time:anchor-to-ticks (time:create "2000/01/01 10:00") 1 "day"
  O> time:anchor-schedule dt 1 "day"
  O> time:schedule-event "observer" ([[] -> ask one-of turtles [set cheese 0]]) (time:create "2000/01/02 10:00")
  O> tick time:go
  O> tick time:go
  [ cheese ] of one-of turtles => 0

TimeDiscreteEventAdd1
  extensions [time]
  globals [dt value]
  turtles-own [cheese]
  O> crt 1 [ set cheese 3 ]
  O> reset-ticks
  [ cheese ] of one-of turtles => 3
  O> time:anchor-schedule time:create "2000/01/01 10:00" 1 "day"
  O> time:schedule-event "observer" ([[] -> ask one-of turtles [set cheese 0]]) (time:create "2000/01/02 10:00")
  O> tick time:go
  O> tick time:go
  [ cheese ] of one-of turtles => 0

TimeDiscreteEventAdd2
  extensions [time]
  globals [dt value]
  turtles-own [cheese]
  O> crt 1 [ set cheese 3 ]
  O> reset-ticks
  [ cheese ] of one-of turtles => 3
  O> time:anchor-schedule time:create "2000/01/01 10:00" 1 "day"
  O> time:schedule-event "observer" ([[] -> ask one-of turtles [set cheese 0]]) (time:create "2000/01/03 10:00")
  O> tick time:go
  O> tick time:go
  [ cheese ] of one-of turtles => 0

TimeDiscreteEventAdd3
  extensions [time]
  globals [dt value]
  turtles-own [cheese]
  O> crt 1 [ set cheese 3 ]
  O> reset-ticks
  [ cheese ] of one-of turtles => 3
  O> time:anchor-schedule time:create "2000/01/01 10:00" 1 "day"
  O> time:schedule-event "observer" ([[] -> ask one-of turtles [set cheese 0]]) (time:create "2000/01/04 10:00")
  O> tick time:go
  O> tick time:go
  [ cheese ] of one-of turtles => 3

TimeDiscreteTurtlesMovement
  extensions [time]
  O> crt 1 [ setxy 0 0 ]
  O> reset-ticks
  O> time:anchor-schedule time:create "2000/01/01 10:00" 1 "year"
  O> time:schedule-event turtles ([[] -> setxy 3 3]) 2.0
  O> tick time:go
  O> tick time:go
  [ ycor ] of one-of turtles => 3

TimeDiscreteTurtleMovement
  extensions [time]
  O> crt 10 [ setxy 0 0 ]
  O> reset-ticks
  O> time:anchor-schedule time:create "2000/01/01 10:00" 1 "year"
  O> time:schedule-event turtle 0 ([[] -> setxy 1 1]) 2.0
  O> tick time:go
  O> tick time:go
  [ ycor ] of turtle 0 => 1

TimeDiscreteSuccess
  extensions [time]
  O> crt 1 [ setxy 0 0 ]
  O> reset-ticks
  O> time:anchor-schedule time:create "2000/01/01 10:00" 1 "year"
  O> time:schedule-event turtles ([[] -> setxy 0 0]) (time:create "2000/01/02 10:00")

TimeDiscreteRepeating
  extensions [time]
  globals [step]
  O> crt 1 [ set step 0 setxy step step ]
  O> reset-ticks
  O> time:anchor-schedule time:create "2000/01/01 10:00" 1 "year"
  O> time:schedule-repeating-event turtles ([[] -> set step step + 1 setxy step step]) (time:create "2000/01/02 10:00") 2.0
  [ ycor ] of one-of turtles => 0
  O> tick time:go
  [ ycor ] of one-of turtles => 1
  O> tick time:go
  [ ycor ] of one-of turtles => 2
  O> tick time:go
  [ ycor ] of one-of turtles => 2
  O> tick time:go
  [ ycor ] of one-of turtles => 3
  O> tick time:go
  [ ycor ] of one-of turtles => 3
  O> tick time:go

TimeGetCommandDateTime
   extensions [time]
   globals [t-datetime]
   O> set t-datetime (time:create "2000-01-02 03:04:05.678")
   time:get "year" t-datetime => 2000
   time:get "month" t-datetime => 1
   time:get "dayofyear" t-datetime => 2
   time:get "hour" t-datetime => 3
   time:get "second" t-datetime => 5

TimeGetCommandDate
   extensions [time]
   globals [t-datetime]
   O> set t-datetime (time:create "2000-01-02")
   time:get "year" t-datetime => 2000
   time:get "month" t-datetime => 1
   time:get "dayofyear" t-datetime => 2
   time:get "hour" t-datetime => 0
   time:get "second" t-datetime => 0

TimeGetCommandDay
   extensions [time]
   globals [t-datetime]
   O> set t-datetime (time:create "01-02")
   time:get "year" t-datetime => 2000
   time:get "month" t-datetime => 1
   time:get "dayofyear" t-datetime => 2
   time:get "hour" t-datetime => 0
   time:get "second" t-datetime => 0

TimeFormatting
   extensions [time]
   time:show time:create-with-format "01-02-2000 03:04:05.678" "MM-dd-yyyy HH:mm:ss.SSS" "MM-dd-yyyy HH:mm:ss.SSS" => "01-02-2000 03:04:05.678"
   time:show time:create-with-format "01-02-2000 03" "MM-dd-yyyy HH" "MM-dd-yyyy HH" => "01-02-2000 03"
   time:show time:create-with-format "01-02-2000 03:00:00" "MM-dd-yyyy HH:mm:ss" "MM-dd-yyyy HH:mm" => "01-02-2000 03:00"
   time:show time:create-with-format "01-02-2000 03:00:00.001" "MM-dd-yyyy HH:mm:ss.SSS" "MM-dd-yyyy HH:mm:ss" => "01-02-2000 03:00:00"
   time:show (time:plus (time:create-with-format "01-02-2000" "MM-dd-yyyy") 3 "day") "MM-dd-yyyy" => "01-05"

MoreTimePlusExamples
   extensions [time]
   globals [t-datetime t-date]
   O> ;set t-datetime time:create-with-format "01-01-2000 03:04:05.678" "MM-dd-yyyy HH:mm:ss.SSS"
   O> set t-datetime time:create-with-format "2000-01-01 03:04:05.678" "yyyy-MM-dd HH:mm:ss.SSS"
   O> set t-date (time:create-with-format "2000-01-01 03:04:05.678" "yyyy-MM-dd HH:mm:ss.SSS") ; wow this fails quietly if you don't have the current orientation
   time:show t-datetime "MM-dd-yyyy HH:mm:ss.SSS" => "01-01-2000 03:04:05.678"
   time:show (time:plus (time:create "2000-01-01 10:00:00.000") 1 "hour") "MM-dd-yyyy" => "01-01-2000"
   time:show (time:plus (time:create-with-format "2000-01-01 10:00:00.000" "yyyy-MM-dd HH:mm:ss.SSS") 1 "hour") "MM-dd-yyyy" => "01-01-2000"
   O> ;time:show (time:plus t-date 1 "hour") "MM-dd-yyyy" this needs attention
   O> set t-date time:plus t-date 1 "hour"
